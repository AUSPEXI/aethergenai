<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Scaling Synthetic Generation Safely: Schemas, Seeds, and Controls | Auspexi</title>
  <style>
    body {
      font-family: 'Inter', -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
      line-height: 1.6;
      color: #2d3748;
      max-width: none;
      margin: 0 auto;
      padding: 2rem;
      background-color: #f7fafc;
    }
    h1 {
      font-size: 2.5rem;
      color: #1a202c;
      margin-bottom: 1rem;
      line-height: 1.2;
    }
    h2 {
      font-size: 1.8rem;
      color: #2b6cb0;
      margin-top: 2rem;
      margin-bottom: 1rem;
    }
    p {
      margin-bottom: 1.5rem;
      font-size: 1.1rem;
    }
    em {
      font-style: italic;
      color: #4a5568;
    }
    ul, ol {
      margin-bottom: 1.5rem;
      padding-left: 2rem;
    }
    li {
      margin-bottom: 0.5rem;
      font-size: 1.1rem;
    }
    pre {
      background-color: #f8f9fa;
      color: #2d3748;
      border: 1px solid #e2e8f0;
      padding: 1rem;
      border-radius: 0.5rem;
      overflow-x: auto;
      font-size: 0.95rem;
      margin-bottom: 1.5rem;
    }
    code {
      font-family: 'Fira Code', monospace;
    }
    table {
      width: 100%;
      border-collapse: collapse;
      margin-bottom: 1.5rem;
      background-color: #fff;
      box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }
    th, td {
      padding: 0.75rem;
      border: 1px solid #e2e8f0;
      text-align: left;
      font-size: 1rem;
    }
    th {
      background-color: #2b6cb0;
      color: #fff;
    }
    details {
      margin-bottom: 1rem;
      background-color: #edf2f7;
      padding: 1rem;
      border-radius: 0.5rem;
    }
    summary {
      font-weight: bold;
      cursor: pointer;
      color: #2b6cb0;
      font-size: 1.1rem;
    }
    .aeg-btn {
      display: inline-block;
      background-color: #2b6cb0;
      color: #fff;
      padding: 0.75rem 1.5rem;
      border-radius: 0.5rem;
      text-decoration: none;
      font-weight: bold;
      transition: background-color 0.3s;
      margin-top: 1rem;
    }
    .aeg-btn:hover {
      background-color: #2c5282;
    }
    img {
      width: 100%;
      height: auto;
      max-width: 100vw;
      margin: 0 -2rem;
      display: block;
    }
    blockquote {
      border-left: 4px solid #2b6cb0;
      padding-left: 1rem;
      margin: 1.5rem 0;
      color: #2d3748;
      font-style: italic;
    }
    .kv-list {
      margin: 1rem 0 1.5rem 0;
      display: grid;
      grid-template-columns: 1fr;
      gap: 0.5rem;
    }
    .kv {
      display: flex;
      align-items: flex-start;
      gap: 0.5rem;
      background: #ffffff;
      border: 1px solid #e2e8f0;
      border-radius: 0.5rem;
      padding: 0.6rem 0.8rem;
    }
    .kv .key {
      min-width: 180px;
      font-weight: 600;
      color: #1e40af;
      white-space: nowrap;
    }
    .kv .value {
      color: #4a5568;
    }
    @media (max-width: 600px) {
      body {
        padding: 1rem;
      }
      h1 {
        font-size: 2rem;
      }
      h2 {
        font-size: 1.5rem;
      }
      p, li {
        font-size: 1rem;
      }
      img {
        margin: 0 -1rem;
      }
    }
    pre, code, pre *, code * { color: #1f2937 !important; background: #f8fafc !important; }
    [style*="color:#000"], [style*="color: #000"], [style*="color:black"], [style*="color: black"], [style*="color:rgb(0,0,0)"] { color: #1f2937 !important; }
    [style*="background:#000"], [style*="background: #000"], [style*="background-color:#000"], [style*="background-color: #000"], [style*="background:rgb(0,0,0)"], [style*="background-color:rgb(0,0,0)"] { background-color: #f8fafc !important; }
  </style>
</head>
<body>
  <h1>Scaling Synthetic Generation Safely: Schemas, Seeds, and Controls</h1>
  <p><em>By Gwylym Owen — 28–40 min read</em></p>

  <h2>Executive Summary</h2>
  <p>Scaling synthetic data is not just about volume—it’s about <strong>control</strong>. AethergenPlatform helps manage schemas, seed discipline, scenario overlays, and privacy/utility gates you can trust. Whether it’s millions or billions of records, the process remains governed as of September 2025.</p>

  <h2>Control Surfaces</h2>
  <p>Primary controls:</p>
  <ul>
    <li><strong>Schemas</strong>: Typed fields, constraints, vocabularies, and relations.</li>
    <li><strong>Seeds</strong>: Minimal or redacted anchors for realism, held under strict access control.</li>
    <li><strong>Recipes</strong>: Generation methods with bounded parameters.</li>
    <li><strong>Scenarios</strong>: Overlays to preserve tails and support stress tests.</li>
    <li><strong>Validation</strong>: Fidelity and utility metrics with confidence intervals.</li>
    <li><strong>Privacy</strong>: Probes to measure leakage and optional DP budgets.</li>
    <li><strong>Evidence</strong>: Signed bundles suitable for audit and procurement.</li>
  </ul>

  <h2>Schema Discipline: Building the Foundation</h2>
  <p>Schemas are the backbone—let’s get them solid:</p>
  <ul>
    <li><strong>Enumerations</strong>: Codes like CPT_v12 locked in version control—no wild guesses!</li>
    <li><strong>Constraints</strong>: Ranges (e.g., age 0-120), regex (e.g., phone format), and referential integrity (e.g., provider IDs match).</li>
    <li><strong>Relations</strong>: Capture multiplicity (e.g., 1 provider to many claims) with clear links.</li>
  </ul>

  <h2>Seed Strategy: Planting Smart</h2>
  <p>Seeds are the starting spark—let’s keep them clever:</p>
  <ul>
    <li><strong>Aggregates</strong>: Use minimal samples (e.g., 1,000 rows) or aggregates (e.g., mean claims per region) to anchor realism.</li>
    <li><strong>Segregation</strong>: Lock them in a vault with least privilege access—only the trusted get in!</li>
    <li><strong>Leakage Checks</strong>: Run membership and attribute probes (e.g., 0.03 advantage) to catch any slip-ups.</li>
    <li><strong>Provenance</strong>: Document where they came from and how long they stick around—paper trail time!</li>
  </ul>

  <h2>Generation Recipes</h2>
  <p>Approaches:</p>
  <ul>
    <li><strong>Copulas</strong>: For joint distributions—think correlated claims and amounts!</li>
    <li><strong>Sequence Models</strong>: Timelines with flair, like patient visit patterns.</li>
    <li><strong>Graph Generators</strong>: Networks for AML/fraud (e.g., mule rings)—connect the dots!</li>
    <li><strong>Parameter Ranges</strong>: Safe defaults (e.g., amount μ=4.2) with hard caps (e.g., max 10,000) to avoid chaos.</li>
  </ul>

  <h2>Scenario Overlays</h2>
  <p>Examples:</p>
  <ul>
    <li><strong>Rare Events</strong>: Fraud typologies or adverse cases with adjustable knobs (e.g., 1% prevalence).</li>
    <li><strong>Stress Ranges</strong>: Push robustness (e.g., 10x load) to see if it bends or breaks.</li>
    <li><strong>Versioned Overlays</strong>: Reproducible seeds (e.g., seed=1234) for v1.2 overlays—consistency is king!</li>
  </ul>

  <h2>Validation & Utility</h2>
  <p>Validation plan:</p>
  <ul>
    <li><strong>Comparisons</strong>: Marginals, joints, and temporal stats with tolerances (e.g., ±2% drift).</li>
    <li><strong>Baseline Detectors</strong>: Test at operating points (e.g., 0.75 at 1% FPR) with CI bands (e.g., [0.73, 0.77]).</li>
    <li><strong>Analyst Yield</strong>: Cost curves (e.g., $10 per flagged case) to show real-world value.</li>
  </ul>

  <h2>Privacy Controls</h2>
  <p>Controls:</p>
  <ul>
    <li><strong>Membership Inference</strong>: Keep advantage below thresholds (e.g., 0.05) with probe reports.</li>
    <li><strong>Attribute Disclosure</strong>: Stay under baselines (e.g., 0.03 above random) for sensitive fields.</li>
    <li><strong>Optional DP</strong>: Declare budgets (e.g., ε=2.0, δ=1e-6) and show utility impact (e.g., -1% at OP).</li>
  </ul>

  <h2>Evidence & Governance</h2>
  <p>Artifacts:</p>
  <ul>
    <li><strong>Signed Manifests</strong>: SBOM, environment fingerprints—signed with a digital wink!</li>
    <li><strong>Logs</strong>: Seeds, configs, and parameters logged for reproducible regeneration.</li>
    <li><strong>Change-Control</strong>: Ready for procurement filing with `.aethergen/change-log.json`.</li>
  </ul>

  <h2>Pipeline: The Assembly Line</h2>
  <pre>
schema → seeds → generation → overlays → validation → privacy → packaging → evidence
                        ↘ ablations ↗
  </pre>

  <h2>Use Case Example: AML Scaling</h2>
  <p><strong>Scenario</strong>: An AML squad scaled from 10M to 1B edges—talk about a growth spurt!</p>
  <ul>
    <li><strong>Move</strong>: Tightened schemas, switched to graph generators with parameterized fraud scenarios.</li>
    <li><strong>Result</strong>: Utility@budget hit 0.76 with < 2% drift, and privacy probes passed (0.03 advantage).</li>
    <li><strong>Win</strong>: Procurement gave the nod with quarterly refreshes—smooth sailing!</li>
  </ul>

  <h2>Use Case Example: Healthcare Trials</h2>
  <p><strong>Scenario</strong>: A health team needed 500M patient records for trials.</p>
  <ul>
    <li><strong>Move</strong>: Used copulas with overlay for rare diseases, minimized seeds to 2,000 rows.</li>
    <li><result>Result</result>: Validation showed 0.74 utility at OP, DP at ε=1.5 kept privacy tight.</li>
    <li><strong>Win</strong>: Evidence bundle sealed the deal in 2 weeks—high-fives all around!</li>
  </ul>

  <h2>FAQ</h2>
  <details>
    <summary>Can we skip overlays?</summary>
    <p>Overlays help preserve tails; omitting them may reduce coverage of rare events.</p>
  </details>
  <details>
    <summary>How much seed data is enough?</summary>
    <p>Start lean (e.g., 1,000 rows) and add more only if fidelity gates fail.</p>
  </details>

  <h2>Glossary</h2>
  <ul>
    <li><strong>Overlay</strong>: A scenario tweak to adjust prevalence or severity.</li>
    <li><strong>DP</strong>: Differential privacy—limits the influence of a single record.</li>
    <li><strong>Utility@OP</strong>: Performance at a chosen operating point.</li>
  </ul>

  <h2>Checklist</h2>
  <ul>
    <li><strong>Schemas</strong>: Versioned, dictionaries pinned—blueprint’s solid!</li>
    <li><strong>Seeds</strong>: Minimized, probes pass—secrets are safe!</li>
    <li><strong>Recipes</strong>: Bounded, overlays documented—cooking’s on point!</li>
    <li><strong>Validation & Evidence</strong>: All gates PASS; evidence bundled.</li>
  </ul>

  <h2>Recipe Catalog: The Chef’s Menu</h2>
  <pre>
recipes:
  claims_v3:
    generator: copula+sequence
    params:
      interarrival: mixexp(λ=[.3,.8], w=[.4,.6])
      amount: lognorm(μ=4.2, σ=0.7)
  aml_graph_v2:
    generator: sbm_graph + overlay(mule_ring)
    params:
      sbm: {community_sizes: [10000, 8000, 6000], p_in: 0.08, p_out: 0.01}
      mule_ring: {size: 12, reuse: 0.35}
  </pre>

  <h2>Schema Examples: The Blueprint</h2>
  <pre>
entity Provider { id, specialty, region }
entity Claim { id, provider_id -> Provider.id, amount, code }
constraint Claim.amount >= 0
vocab Claim.code in CPT_v12
  </pre>

  <h2>QC Checks</h2>
  <ul>
    <li><strong>Null Rates</strong>: Keep them below thresholds (e.g., < 1%) per field—no gaps!</li>
    <li><strong>Integrity</strong>: Range, regex, and referential checks—dot the i’s!</li>
    <li><strong>Coverage</strong>: Rare codes hit via overlays—catch those outliers!</li>
  </ul>

  <h2>Seed Governance</h2>
  <ul>
    <li><strong>Vault</strong>: Separate storage, least privilege—only the VIPs get in!</li>
    <li><strong>Rotation</strong>: Policies for refresh and retention (e.g., 90 days)—keep it fresh!</li>
    <li><strong>Probes</strong>: Attach reports to evidence—leakage caught red-handed!</li>
  </ul>

  <h2>Privacy Budgets (Optional)</h2>
  <ul>
    <li><strong>Declare</strong>: ε (e.g., 2.0) and δ (e.g., 1e-6) per release with composition notes.</li>
    <li><strong>Impact</strong>: Publish utility hit (e.g., -1% at OP) so you know what you’re trading.</li>
  </ul>

  <h2>Runbook</h2>
  <ol>
    <li><strong>Small Run</strong>: Test it out, tweak the params—get the feel!</li>
    <li><strong>Scale Run</strong>: Crank it up, run probes, cook up evidence—full steam ahead!</li>
    <li><strong>Gate & Package</strong>: Check the gates, bundle it, file for procurement—done deal!</li>
  </ol>

  <h2>Monitoring</h2>
  <ul>
    <li><strong>Success/Failure</strong>: Track generation wins and flops—resource usage too!</li>
    <li><strong>Drift</strong>: Watch marginals/joints across releases—catch the drift!</li>
    <li><strong>Utility Stability</strong>: Keep OP performance steady across refreshes—rock solid!</li>
  </ul>

  <h2>Dashboards</h2>
  <ul>
    <li><strong>Fidelity Panels</strong>: Tolerances shown—see how close it sticks!</li>
    <li><strong>Utility@OP</strong>: CIs by segment (e.g., 0.76 [0.74, 0.78])—clear as day!</li>
    <li><strong>Privacy Probes</strong>: Summaries of advantage (e.g., 0.03)—privacy check!</li>
  </ul>

  <h2>Procurement Mapping</h2>
  <ul>
    <li><strong>Evidence Bundle</strong>: Straight to the contract exhibit—proof on paper!</li>
    <li><strong>Versions</strong>: Recipe and schema versions in the appendix—trace it back!</li>
  </ul>

  <h2>Parameter Table: The Dial Settings</h2>
  <pre>
param, default, min, max, note
amount.μ, 4.2, 3.9, 4.8, lognorm mean
amount.σ, 0.7, 0.5, 0.9, tail width
ring.size, 10, 6, 18, mule ring members
ring.reuse, 0.3, 0.1, 0.6, device/IP reuse rate
  </pre>

  <h2>Example YAML: The Recipe Card</h2>
  <pre>
recipe: aml_graph_v2
params:
  sbm:
    community_sizes: [10000, 8000, 6000]
    p_in: 0.05
    p_out: 0.01
  mule_ring:
    size: 12
    reuse: 0.35
  </pre>

  <h2>Drift Testing: Weathering the Storm</h2>
  <ul>
    <li><strong>Simulate Shifts</strong>: Code changes to test OP utility within bands (e.g., ±2%).</li>
    <li><strong>Alert</strong>: Flag if segment delta exceeds threshold (e.g., 3%)—time to adjust!</li>
  </ul>

  <h2>Cost Estimation: The Price Tag</h2>
  <ul>
    <li><strong>Generation</strong>: Time per million (e.g., 42 min) and infra profile (e.g., GPU).</li>
    <li><strong>Validation</strong>: Cost and time (e.g., 18 min CPU) to check it out.</li>
    <li><strong>Evidence</strong>: Rendering time (e.g., 4 min) for that shiny bundle.</li>
  </ul>

  <h2>Multi-Region: Global Flavor</h2>
  <ul>
    <li><strong>Overlays</strong>: Regional vocab (e.g., UK vs. US codes) and parameter tweaks.</li>
    <li><strong>Targets</strong>: Stability goals per region (e.g., < 1% delta in Europe).</li>
  </ul>

  <h2>Appendix: CLI</h2>
  <pre>
aeg generate --recipe claims_v3 --out data/claims
AEG_OP=fpr=0.01 aeg evidence --bundle out/evidence
  </pre>

  <h2>Appendix: JSON Manifest: The Checklist</h2>
  <pre>
{
  "schema_version": "1.0",
  "artifacts": ["parquet", "metrics.json", "plots.html"],
  "hashes": {"metrics.json": "sha256:abc123..."}
}
  </pre>

  <h2>Example Evidence Snippets: The Proof Bits</h2>
  <pre>
metrics.json: {"utility@op": 0.761, "ci": [0.752,0.769]}
probes.json: {"membership_advantage": 0.03}
  </pre>

  <h2>CI/CD Hooks: The Automation Dance</h2>
  <ul>
    <li><strong>Automate</strong>: Generation, validation, probes, and evidence packaging.</li>
    <li><strong>Fail Safe</strong>: Pipeline flops if gates fail—logs for triage to save the day!</li>
  </ul>

  <h2>Team Roles: The Crew</h2>
  <ul>
    <li><strong>Data Custodian</strong>: Seeds and policy boss—guards the vault!</li>
    <li><strong>Generator Engineer</strong>: Responsible for recipes and overlays.</li>
    <li><strong>QA Lead</strong>: Gates and evidence sign-off—quality control champ!</li>
  </ul>

  <h2>Run Cost Table: The Time Budget</h2>
  <pre>
step, time_min, notes
generate_10M, 42, GPU
validate, 18, CPU
probes, 25, CPU
bundle, 4, CPU
  </pre>

  <h2>Benchmark Plan: The Test Kitchen</h2>
  <ul>
    <li><strong>Compare</strong>: Recipes A/B, report utility@OP and fidelity deltas—pick the winner!</li>
    <li><strong>Record Costs</strong>: Log the price, choose the best trade-off—smart spending!</li>
  </ul>

  <h2>Closing</h2>
  <p>Scaling safely is about <strong>discipline</strong>—schemas, seeds, recipes, overlays, and gates that demonstrate utility and privacy. <strong>AethergenPlatform</strong> makes that process auditable and repeatable at any scale.</p>

  <p><a href="/contact" class="aeg-btn">Contact Sales →</a></p>
</body>
</html>